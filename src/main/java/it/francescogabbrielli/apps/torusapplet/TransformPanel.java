/*
 * TransformPanel.java
 *
 * Created on 14-dic-2010, 12.21.03
 */

package it.francescogabbrielli.apps.torusapplet;

import Jama.Matrix;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Francesco Gabbrielli
 */
public class TransformPanel extends javax.swing.JPanel implements KeyListener, SimulationListener {

	SimulationThread simulation ;
	SimulationSystem system ;

	JTextField[] fields = new JTextField[9] ;

    /** Creates new form TransformPanel */
    public TransformPanel(SimulationSystem s) {
		this.system = s ;
		s.addSimulationListener(this) ;
        initComponents();

		fields[0] = a11Field ;
		fields[1] = a12Field ;
		fields[2] = a13Field ;
		fields[3] = a21Field ;
		fields[4] = a22Field ;
		fields[5] = a23Field ;
		fields[6] = a31Field ;
		fields[7] = a32Field ;
		fields[8] = a33Field ;
		for(int i=0;i<9;i++)
			fields[i].addKeyListener(this);
		
		resetTransform();
    }

	private void resetTransform() {
		for(int i=0;i<3;i++)
			for(int j=0;j<3;j++)
				fields[i*3+j].setText(String.format(Locale.US, "%6.6f", system.transform.get(i, j))) ;
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        a11Field = new javax.swing.JTextField();
        a12Field = new javax.swing.JTextField();
        a13Field = new javax.swing.JTextField();
        a21Field = new javax.swing.JTextField();
        a22Field = new javax.swing.JTextField();
        a23Field = new javax.swing.JTextField();
        a31Field = new javax.swing.JTextField();
        a32Field = new javax.swing.JTextField();
        a33Field = new javax.swing.JTextField();

        a11Field.setColumns(10);

        a12Field.setColumns(10);

        a13Field.setColumns(10);

        a21Field.setColumns(10);

        a22Field.setColumns(10);

        a23Field.setColumns(10);

        a31Field.setColumns(10);

        a32Field.setColumns(10);

        a33Field.setColumns(10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(a31Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a21Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a11Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(a12Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a22Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a32Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(a33Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a23Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a13Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a13Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a23Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a33Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(a11Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a12Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(a21Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a22Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(a31Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a32Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a11Field;
    private javax.swing.JTextField a12Field;
    private javax.swing.JTextField a13Field;
    private javax.swing.JTextField a21Field;
    private javax.swing.JTextField a22Field;
    private javax.swing.JTextField a23Field;
    private javax.swing.JTextField a31Field;
    private javax.swing.JTextField a32Field;
    private javax.swing.JTextField a33Field;
    // End of variables declaration//GEN-END:variables


	public void keyTyped(KeyEvent evt) {

	}

	public void keyPressed(KeyEvent evt) {

	}

	public void keyReleased(KeyEvent evt) {
		if(evt.getKeyCode()==KeyEvent.VK_ENTER) {
			try {
				double[][] a = new double[3][3] ;
				for(int i=0;i<3;i++)
					for(int j=0;j<3;j++)
						a[i][j] = Double.parseDouble(fields[i*3+j].getText()) ;
				Matrix A = new Matrix(a) ;
				if(A.cond()>15)
					throw new Exception("Almost Singular Transform") ;
				system.setTransform(A) ;
			} catch(Exception e) {
				resetTransform();
				JOptionPane.showMessageDialog(this, e.getMessage(), "Attention!", JOptionPane.WARNING_MESSAGE);
			}
		}
	}

	public void init(SimulationEvent evt) {
		
	}

	public void update(SimulationEvent evt) {
		
	}

	public void changed(SimulationEvent evt) {
		switch(evt.getProperty()) {
			case TRANSFORM:
				resetTransform() ;
		}
	}



}
